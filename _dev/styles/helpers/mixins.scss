@import './functions.scss';

//Media query up
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	@if $min {
		@media (min-width: $min) {
			@content;
		}
	} @else {
		@content;
	}
}

//Media query down
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
	$max: breakpoint-max($name, $breakpoints);
	@if $max {
		@media (max-width: $max) {
			@content;
		}
	} @else {
		@content;
	}
}

//Media query only
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	$max: breakpoint-max($name, $breakpoints);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	} @else if $max == null {
		@include media-breakpoint-up($name, $breakpoints) {
			@content;
		}
	} @else if $min == null {
		@include media-breakpoint-down($name, $breakpoints) {
			@content;
		}
	}
}

//Only Firefox
@mixin firefox-only {
	@at-root {
		@-moz-document url-prefix() {
			& {
				@content;
			}
		}
	}
}

//Gutters
@mixin padding-base($gutter: $grid-gutter-width) {
	padding: 0 $gutter;
	@include media-breakpoint-down(sm){
		padding: 0 ($gutter / 2);
	}
}

//Container
@mixin make-container() {
	padding-right: var(--grid-desktop-horizontal-spacing) !important;
	padding-left: var(--grid-desktop-horizontal-spacing) !important;
	@include media-breakpoint-down(sm){
		padding-right: var(--grid-mobile-horizontal-spacing)!important;
		padding-left: var(--grid-mobile-horizontal-spacing)!important;
	}
}

//Row
@mixin make-row($gutter: $grid-gutter-width) {
	display: flex;
	flex-wrap: wrap;
	margin-right: ($gutter / -1);
	margin-left: ($gutter / -1);
	@include media-breakpoint-down(sm){
		margin-right: ($gutter / -2);
		margin-left: ($gutter / -2);
	}
}

//Col
@mixin make-col($size, $columns: $grid-columns) {
	width: 100%;
	max-width: percentage($size / $columns);
}

//Grid system
@mixin make-grid-columns($columns: $grid-columns, $breakpoints: $grid-breakpoints, $gutter: $grid-gutter-width) {
	%grid-column {
		position: relative;
		width: 100%;
		min-height: 1px;
		padding-right: ($gutter / 1);
		padding-left: ($gutter / 1);
		@include media-breakpoint-down(sm){
			padding-right: ($gutter / 2);
			padding-left: ($gutter / 2);
		}
	}

	@each $breakpoint in map-keys($breakpoints) {
		$infix: breakpoint-infix($breakpoint, $breakpoints);

		@for $i from 1 through $columns {
			.col#{$infix}-#{$i} {
				@extend %grid-column;
			}
		}

		.col#{$infix} {
			@extend %grid-column;
		}

		@include media-breakpoint-up($breakpoint, $breakpoints) {
			@for $i from 1 through $columns {
				.col#{$infix}-#{$i} {
					@include make-col($i, $columns);
				}
			}
		}
	}
}